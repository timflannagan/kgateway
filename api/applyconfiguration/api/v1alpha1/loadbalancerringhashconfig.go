// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// LoadBalancerRingHashConfigApplyConfiguration represents a declarative configuration of the LoadBalancerRingHashConfig type for use
// with apply.
type LoadBalancerRingHashConfigApplyConfiguration struct {
	MinimumRingSize *uint64 `json:"minimumRingSize,omitempty"`
	MaximumRingSize *uint64 `json:"maximumRingSize,omitempty"`
}

// LoadBalancerRingHashConfigApplyConfiguration constructs a declarative configuration of the LoadBalancerRingHashConfig type for use with
// apply.
func LoadBalancerRingHashConfig() *LoadBalancerRingHashConfigApplyConfiguration {
	return &LoadBalancerRingHashConfigApplyConfiguration{}
}

// WithMinimumRingSize sets the MinimumRingSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MinimumRingSize field is set to the value of the last call.
func (b *LoadBalancerRingHashConfigApplyConfiguration) WithMinimumRingSize(value uint64) *LoadBalancerRingHashConfigApplyConfiguration {
	b.MinimumRingSize = &value
	return b
}

// WithMaximumRingSize sets the MaximumRingSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaximumRingSize field is set to the value of the last call.
func (b *LoadBalancerRingHashConfigApplyConfiguration) WithMaximumRingSize(value uint64) *LoadBalancerRingHashConfigApplyConfiguration {
	b.MaximumRingSize = &value
	return b
}
