clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_default_kubernetes_443
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_gwtest_reviews_8080
  type: EDS
endpoints:
- clusterName: kube_gwtest_reviews_8080
  endpoints:
  - lbEndpoints:
    - endpoint:
        address:
          socketAddress:
            address: 10.244.1.11
            portValue: 8080
      loadBalancingWeight: 1
    loadBalancingWeight: 1
    locality:
      region: r1
      subZone: r1z2s3
      zone: r1z2
listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8080
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: transformation
          typedConfig:
            '@type': type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~8080
        statPrefix: http
        useRemoteAddress: true
    name: listener~8080
  name: listener~8080
routes:
- ignorePortInHostMatching: true
  name: listener~8080
  virtualHosts:
  - domains:
    - '*'
    name: listener~8080~*
    routes:
    - directResponse:
        body:
          inlineString: Kgateway has detected an invalid route configuration
        status: 500
      match:
        pathSeparatedPrefix: /api/v1
      name: listener~8080~*-route-0-httproute-multi-rule-route-gwtest-0-0-rule-1-matcher-0
      typedPerFilterConfig:
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              requestTransformation:
                transformationTemplate:
                  headers:
                    x-test-header:
                      text: '{{ invalid_template }'
                  parseBodyBehavior: DontParse
                  passthrough: {}
    - match:
        pathSeparatedPrefix: /api/v2
      name: listener~8080~*-route-1-httproute-multi-rule-route-gwtest-1-0-rule-2-matcher-0
      route:
        cluster: kube_gwtest_reviews_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              requestTransformation:
                transformationTemplate:
                  headers:
                    x-test-header:
                      text: test
                  parseBodyBehavior: DontParse
                  passthrough: {}
    - match:
        pathSeparatedPrefix: /api/v3
      name: listener~8080~*-route-2-httproute-multi-rule-route-gwtest-2-0-rule-3-matcher-0
      route:
        cluster: kube_gwtest_reviews_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              requestTransformation:
                transformationTemplate:
                  headers:
                    x-test-header:
                      text: test
                  parseBodyBehavior: DontParse
                  passthrough: {}
