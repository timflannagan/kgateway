---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  labels:
    app: kgateway
    app.kubernetes.io/name: kgateway
    gateway.networking.k8s.io/policy: Direct
  name: routepolicies.gateway.kgateway.dev
spec:
  group: gateway.kgateway.dev
  names:
    categories:
    - kgateway
    kind: RoutePolicy
    listKind: RoutePolicyList
    plural: routepolicies
    shortNames:
    - rp
    singular: routepolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              ai:
                description: |-
                  AIRoutePolicy config is used to configure the behavior of the LLM provider
                  on the level of individual routes. These route settings, such as prompt enrichment,
                  retrieval augmented generation (RAG), and semantic caching, are applicable only
                  for routes that send requests to an LLM provider backend.
                properties:
                  defaults:
                    description: |-
                      Provide defaults to merge with user input fields.
                      Defaults do _not_ override the user input fields, unless you explicitly set `override` to `true`.
                    items:
                      description: |-
                        FieldDefault provides default values for specific fields in the JSON request body sent to the LLM provider.
                        These defaults are merged with the user-provided request to ensure missing fields are populated.

                        User input fields here refer to the fields in the JSON request body that a client sends when making a request to the LLM provider.
                        Defaults set here do _not_ override those user-provided values unless you explicitly set `override` to `true`.

                        Example: Setting a default system field for Anthropic, which does not support system role messages:
                        ```yaml
                        defaults:
                          - field: "system"
                            value: "answer all questions in French"

                        ```

                        Example: Setting a default temperature and overriding `max_tokens`:
                        ```yaml
                        defaults:
                          - field: "temperature"
                            value: "0.
                      properties:
                        field:
                          description: The name of the field.
                          minLength: 1
                          type: string
                        override:
                          default: false
                          description: |-
                            Whether to override the field's value if it already exists.
                            Defaults to false.
                          type: boolean
                        value:
                          description: The field default value, which can be any JSON
                            Data Type.
                          minLength: 1
                          type: string
                      required:
                      - field
                      - value
                      type: object
                    type: array
                  promptEnrichment:
                    description: |-
                      Enrich requests sent to the LLM provider by appending and prepending system prompts.
                      This can be configured only for LLM providers that use the `CHAT` or `CHAT_STREAMING` API route type.
                    properties:
                      append:
                        description: A list of messages to be appended to the prompt
                          sent by the client.
                        items:
                          description: An entry for a message to prepend or append
                            to each prompt.
                          properties:
                            content:
                              description: String content of the message.
                              type: string
                            role:
                              description: |-
                                Role of the message. The available roles depend on the backend
                                LLM provider model, such as `SYSTEM` or `USER` in the OpenAI API.
                              type: string
                          required:
                          - content
                          - role
                          type: object
                        type: array
                      prepend:
                        description: A list of messages to be prepended to the prompt
                          sent by the client.
                        items:
                          description: An entry for a message to prepend or append
                            to each prompt.
                          properties:
                            content:
                              description: String content of the message.
                              type: string
                            role:
                              description: |-
                                Role of the message. The available roles depend on the backend
                                LLM provider model, such as `SYSTEM` or `USER` in the OpenAI API.
                              type: string
                          required:
                          - content
                          - role
                          type: object
                        type: array
                    type: object
                  promptGuard:
                    description: |-
                      Set up prompt guards to block unwanted requests to the LLM provider and mask sensitive data.
                      Prompt guards can be used to reject requests based on the content of the prompt, as well as
                      mask responses based on the content of the response.
                    properties:
                      request:
                        description: Prompt guards to apply to requests sent by the
                          client.
                        properties:
                          customResponse:
                            description: |-
                              A custom response message to return to the client. If not specified, defaults to
                              "The request was rejected due to inappropriate content".
                            properties:
                              message:
                                default: The request was rejected due to inappropriate
                                  content
                                description: |-
                                  A custom response message to return to the client. If not specified, defaults to
                                  "The request was rejected due to inappropriate content".
                                type: string
                              statusCode:
                                default: 403
                                description: The status code to return to the client.
                                  Defaults to 403.
                                format: int32
                                maximum: 599
                                minimum: 200
                                type: integer
                            type: object
                          moderation:
                            description: |-
                              Pass prompt data through an external moderation model endpoint,
                              which compares the request prompt input to predefined content rules.
                            properties:
                              openAIModeration:
                                description: |-
                                  Pass prompt data through an external moderation model endpoint,
                                  which compares the request prompt input to predefined content rules.
                                  Configure an OpenAI moderation endpoint.
                                properties:
                                  authToken:
                                    description: |-
                                      The authorization token that the AI gateway uses to access the OpenAI API.
                                      This token is automatically sent in the `Authorization` header of the
                                      request and prefixed with `Bearer`.
                                    properties:
                                      inline:
                                        description: |-
                                          Provide the token directly in the configuration for the Backend.
                                          This option is the least secure. Only use this option for quick tests such as trying out AI Gateway.
                                        type: string
                                      kind:
                                        description: |-
                                          Kind specifies which type of authorization token is being used.
                                          Must be one of: "Inline", "SecretRef", "Passthrough".
                                        enum:
                                        - Inline
                                        - SecretRef
                                        - Passthrough
                                        type: string
                                      secretRef:
                                        description: |-
                                          Store the API key in a Kubernetes secret in the same namespace as the Backend.
                                          Then, refer to the secret in the Backend configuration. This option is more secure than an inline token,
                                          because the API key is encoded and you can restrict access to secrets through RBAC rules.
                                          You might use this option in proofs of concept, controlled development and staging environments,
                                          or well-controlled prod environments that use secrets.
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    required:
                                    - kind
                                    type: object
                                  model:
                                    description: |-
                                      Optional: Override the model name, such as `gpt-4o-mini`.
                                      If unset, the model name is taken from the request.
                                      This setting can be useful when setting up model failover within the same LLM provider.
                                    type: string
                                required:
                                - authToken
                                type: object
                            type: object
                          regex:
                            description: Regular expression (regex) matching for prompt
                              guards and data masking.
                            properties:
                              action:
                                default: MASK
                                description: |-
                                  The action to take if a regex pattern is matched in a request or response.
                                  This setting applies only to request matches. PromptguardResponse matches are always masked by default.
                                  Defaults to `MASK`.
                                type: string
                              builtins:
                                description: |-
                                  A list of built-in regex patterns to match against the request or response.
                                  Matches and built-ins are additive.
                                items:
                                  description: |-
                                    BuiltIn regex patterns for specific types of strings in prompts.
                                    For example, if you specify `CREDIT_CARD`, any credit card numbers
                                    in the request or response are matched.
                                  enum:
                                  - SSN
                                  - CREDIT_CARD
                                  - PHONE_NUMBER
                                  - EMAIL
                                  type: string
                                type: array
                              matches:
                                description: |-
                                  A list of regex patterns to match against the request or response.
                                  Matches and built-ins are additive.
                                items:
                                  description: RegexMatch configures the regular expression
                                    (regex) matching for prompt guards and data masking.
                                  properties:
                                    name:
                                      description: An optional name for this match,
                                        which can be used for debugging purposes.
                                      type: string
                                    pattern:
                                      description: The regex pattern to match against
                                        the request or response.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          webhook:
                            description: Configure a webhook to forward requests to
                              for prompt guarding.
                            properties:
                              forwardHeaders:
                                description: ForwardHeaders define headers to forward
                                  with the request to the webhook.
                                items:
                                  description: |-
                                    HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                    headers.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, only the first
                                        entry with an equivalent name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.

                                        When a header is repeated in an HTTP request, it is
                                        implementation-specific behavior as to how this is represented.
                                        Generally, proxies should follow the guidance from the RFC:
                                        https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                        processing a repeated header, with special handling for "Set-Cookie".
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    type:
                                      default: Exact
                                      description: |-
                                        Type specifies how to match against the value of the header.

                                        Support: Core (Exact)

                                        Support: Implementation-specific (RegularExpression)

                                        Since RegularExpression HeaderMatchType has implementation-specific
                                        conformance, implementations can support POSIX, PCRE or any other dialects
                                        of regular expressions. Please read the implementation's documentation to
                                        determine the supported dialect.
                                      enum:
                                      - Exact
                                      - RegularExpression
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              host:
                                description: Host to send the traffic to.
                                properties:
                                  host:
                                    description: Host is the host name.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  port:
                                    description: Port is the port number.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - host
                                - port
                                type: object
                            required:
                            - host
                            type: object
                        type: object
                      response:
                        description: Prompt guards to apply to responses returned
                          by the LLM provider.
                        properties:
                          regex:
                            description: Regular expression (regex) matching for prompt
                              guards and data masking.
                            properties:
                              action:
                                default: MASK
                                description: |-
                                  The action to take if a regex pattern is matched in a request or response.
                                  This setting applies only to request matches. PromptguardResponse matches are always masked by default.
                                  Defaults to `MASK`.
                                type: string
                              builtins:
                                description: |-
                                  A list of built-in regex patterns to match against the request or response.
                                  Matches and built-ins are additive.
                                items:
                                  description: |-
                                    BuiltIn regex patterns for specific types of strings in prompts.
                                    For example, if you specify `CREDIT_CARD`, any credit card numbers
                                    in the request or response are matched.
                                  enum:
                                  - SSN
                                  - CREDIT_CARD
                                  - PHONE_NUMBER
                                  - EMAIL
                                  type: string
                                type: array
                              matches:
                                description: |-
                                  A list of regex patterns to match against the request or response.
                                  Matches and built-ins are additive.
                                items:
                                  description: RegexMatch configures the regular expression
                                    (regex) matching for prompt guards and data masking.
                                  properties:
                                    name:
                                      description: An optional name for this match,
                                        which can be used for debugging purposes.
                                      type: string
                                    pattern:
                                      description: The regex pattern to match against
                                        the request or response.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          webhook:
                            description: Configure a webhook to forward responses
                              to for prompt guarding.
                            properties:
                              forwardHeaders:
                                description: ForwardHeaders define headers to forward
                                  with the request to the webhook.
                                items:
                                  description: |-
                                    HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                    headers.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, only the first
                                        entry with an equivalent name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.

                                        When a header is repeated in an HTTP request, it is
                                        implementation-specific behavior as to how this is represented.
                                        Generally, proxies should follow the guidance from the RFC:
                                        https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                        processing a repeated header, with special handling for "Set-Cookie".
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    type:
                                      default: Exact
                                      description: |-
                                        Type specifies how to match against the value of the header.

                                        Support: Core (Exact)

                                        Support: Implementation-specific (RegularExpression)

                                        Since RegularExpression HeaderMatchType has implementation-specific
                                        conformance, implementations can support POSIX, PCRE or any other dialects
                                        of regular expressions. Please read the implementation's documentation to
                                        determine the supported dialect.
                                      enum:
                                      - Exact
                                      - RegularExpression
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              host:
                                description: Host to send the traffic to.
                                properties:
                                  host:
                                    description: Host is the host name.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  port:
                                    description: Port is the port number.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - host
                                - port
                                type: object
                            required:
                            - host
                            type: object
                        type: object
                    type: object
                  routeType:
                    description: The type of route to the LLM provider API. Currently,
                      `CHAT` and `CHAT_STREAMING` are supported.
                    enum:
                    - CHAT
                    - CHAT_STREAMING
                    type: string
                type: object
              targetRef:
                description: not sure why i need to copy this; codegen fails if i
                  dont
                properties:
                  group:
                    description: Group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                required:
                - group
                - kind
                - name
                type: object
              timeout:
                minimum: 1
                type: integer
            type: object
          status:
            properties:
              ancestors:
                items:
                  properties:
                    ancestorRef:
                      description: |-
                        AncestorRef corresponds with a ParentRef in the spec that this
                        PolicyAncestorStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.

                            <gateway:experimental:description>
                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.

                            <gateway:experimental:description>
                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.
                            </gateway:experimental:description>

                            Implementations MAY choose to support other parent resources.
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                    conditions:
                      description: Conditions describes the status of the Policy with
                        respect to the given Ancestor.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      type: string
                  required:
                  - ancestorRef
                  - controllerName
                  type: object
                maxItems: 16
                type: array
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            required:
            - ancestors
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
