name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        default: "v0.0.1"
        description: "The version to release"
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

permissions:
  contents: write
  packages: write

jobs:
  setup:
    name: Setup Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_vars.outputs.version }}
      goreleaser_args: ${{ steps.set_vars.outputs.goreleaser_args }}
    steps:
      - name: Set the release related variables
        id: set_vars
        run: |
          # run the full release pipeline unless it's a pull request
          if [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            VERSION="${{ github.event.inputs.version }}"
            echo "goreleaser_args=--clean --skip=validate" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
            echo "goreleaser_args=--clean" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION="pr-$(echo "${GITHUB_REF}" | sed -E 's|refs/pull/([^/]+)/?.*|\1|')"
            echo "goreleaser_args=--snapshot --clean" >> $GITHUB_OUTPUT
          else
            VERSION="$(git describe --tags --always)"
            echo "goreleaser_args=--snapshot --clean" >> $GITHUB_OUTPUT
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  helm:
    name: Package Helm Charts
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ${{ env.IMAGE_REGISTRY }} -u ${{ github.repository_owner }} --password-stdin

      - name: Lint kgateway chart
        run: helm lint install/helm/kgateway

      - name: Package kgateway chart
        run: make package-kgateway-chart
        env:
          VERSION: ${{ needs.setup.outputs.version }}

      - name: Push kgateway chart to registry
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          helm push _test/kgateway-${{ needs.setup.outputs.version }}.tgz oci://${{ env.IMAGE_REGISTRY }}/kgateway-helm

  goreleaser:
    name: GoReleaser
    needs: [setup, helm]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Log into ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run goreleaser
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.setup.outputs.version }}
          IMAGE_REGISTRY: ${{ env.IMAGE_REGISTRY }}
          GORELEASER_ARGS: ${{ needs.setup.outputs.goreleaser_args }}
